version: '3'

services:
  payload:
#    image: node:18-alpine
    build: .
    ports:
      - '3000'
    environment:
      - PAYLOAD_SECRET=${PAYLOAD_SECRET}
      - DATABASE_URI=${DATABASE_URI}
#       - NODE_ENV=production
#     volumes:
#      - .:/home/node/app
#       - node_modules:/home/node/app/node_modules
    working_dir: /home/node/app/
#     command: sh -c "yarn install --production=false && yarn dev"
#     env_file:
#       - .env
#    healthcheck:
#      test: ["CMD", "wget", "-q", "--spider", "http://localhost:55658/admin"]
#      interval: 5s
#      timeout: 20s
#      retries: 10
    depends_on:
      - postgres
        #condition: service_healthy

  postgres:
    image: "postgres:16.3-alpine"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: nianiba-db
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

#  mongo:
#    image: mongo:latest
#    ports:
#      - '27017:27017'
#    command:
#      - --storageEngine=wiredTiger
#    volumes:
#      - data:/data/db
#     logging:
#       driver: none
#    healthcheck:
#      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
#      interval: 10s
#      timeout: 10s
#      retries: 6
#      start_period: 40s

volumes:
  db-data:
    driver: local
    driver_opts:
      type: none
      device: ./data/db
      o: bind
    labels:
      place.milan.description: "Postgress Database volume"
      place.milan.department: "IT/Ops"
      place.milan.owner: "place.milan.nianiba"
 # node_modules:
