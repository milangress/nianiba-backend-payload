version: '3'

services:
  payload:
#    image: node:18-alpine
    build:
      context: .
      target: runtime
    ports:
      - '55658:3000'
    environment:
      - PAYLOAD_SECRET=${PAYLOAD_SECRET}
      - DATABASE_URI=${DATABASE_URI_DOCKER}
      - NODE_ENV=${NODE_ENV}
#     volumes:
#      - .:/home/node/app
#       - node_modules:/home/node/app/node_modules
    working_dir: /home/node/app/
#     command: sh -c "yarn install --production=false && yarn dev"
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "wget", "-q", "--spider", "http://localhost:3000/admin" ]
      interval: 5s
      timeout: 20s
      retries: 10
    depends_on:
      db-migration:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy

  db-migration:
    build:
      context: .
      target: migration
    environment:
      - DATABASE_URI=${DATABASE_URI_DOCKER}
    env_file:
      - .env
    depends_on:
      build-step:
        condition: service_started
      postgres:
        condition: service_healthy

  build-step:
    environment:
      - NODE_ENV=${NODE_ENV}
    build:
      context: .
      target: builder
      cache_from:
        - type=local,src=./.buildkit-cache/build-step
      cache_to:
        - type=local,dest=./.buildkit-cache/build-step,mode=max
    env_file:
      - .env

  postgres:
    image: "postgres:16.3-alpine"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: nianiba-db
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  db-data:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/data/db
      o: bind
    labels:
      place.milan.description: "Postgress Database volume"
      place.milan.department: "IT/Ops"
      place.milan.owner: "place.milan.nianiba"
 # node_modules:
